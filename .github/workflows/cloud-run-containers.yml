name: Deploy Containers to Cloud Run

on:
#  push:
#    branches:
#      - error-handling
  pull_request:
    branches:
      - develop

jobs:
  cloud_run_frontend_deployment:
    name: Cloud Run Frontend Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.CR_JSON_KEY }}
          export_default_credentials: true

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0.3.0
        with:
          env_vars: REGION=europe-west4
          image: europe-west4-docker.pkg.dev/froedevrolijk-world/world-docker-registry/world-frontend:latest
          service: world-frontend

  cloud_run_api_deployment:
    name: Cloud Run API Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.CR_JSON_KEY }}
          export_default_credentials: true

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0.3.0
        with:
          env_vars: REGION=europe-west4
          image: europe-west4-docker.pkg.dev/froedevrolijk-world/world-docker-registry/world-api:latest
          service: world-api

# 1. Test locally with containers. build containers locally and run docker-compose

# 2. TODO set custom port for
#   Frontend: 8080 -> 80
#   API:      9000 -> 9000
#   DB:       5432 -> 5432

# test using gcloud command

# 3. Integrate into GH Actions
# https://github.com/marketplace/actions/set-up-gcloud-cloud-sdk-environment
# https://github.com/marketplace/actions/deploy-to-cloud-run